== TODO ==
* (Done) If first line of note was changed, update title before saving
* (Done) While typing the first line should always be large and blue
* (Done) After save emit "noteChanged" signal. With that signal update the list of all notes. Date and Title. Implement onNoteTitleChanged().
* (Done) Fix dates and times of notes
* (Done) Save if switched to list view
* (Done) Problem with list handling if lists have gaps. E.g. jumping from level 4 to level 2.
* (Done) Indenting lists is still a mayor problem. Main problem: Can't start lists on level other then 1. Using only indenting to identify list depth does not work, because of missing list decorations (but could be done manually).
* (Done) Adjust text editor to work with new list handling.
* (Done) If first list-item in editor is on level2, save fails
* (Done) Pressing 'Enter' in list needs to add bullet to next line
* (Done) Pressing 'Backspace' in list needs to decrease indent if cursor on bullet
* (Done) Pressing 'Delete' in list needs to decrease indent if cursor on bullet
* (Done) Use single instance mode
* (Done) Pressing 'Enter' in note title takes the formatting to the next line. Result: Blue underlined text.
* (Done) Move all formattings to a central place
* (Done) Font on real device way to small / Font in Simulator way to large
* (Done) Parse notes *after* launching UI to decrease startup time
* (Done) Implement Search in list view
* (Done) Implement UI for changing text style
* (Done) Implement changing the text sizes (small, large, huge)
* (Done) Sort favorites first
* (Done) Reimplement sorting using the QFilterSortProxy
* (Done) Implement note deleting
* (Done) Add context menu to notes list to delete note. Simply call notestore.del(NoteData *note);
* (Done) Before deleting a note, ask for confirmation
* (Done) Add context menu to notes list to add/remove from favs.
* (Done) Implement simple about dialog
* (Done) Bullets should always be painted using the default font (e.g. not bold)
* (Done) Not all formattings work reliable
* (Done) Entering text in front of a bullet or directly behind it shoudn't be allowed. Instead, place cursor after bullet and insert there.
* (Done) Disable drag & drop
* (Done) Implement way to delete several notes at once
* (Done) Read and write favorites from/to local storage
* (Done) Decide where to store notes. /home/user/.conboy or /home/user/MyDocs/.conboy? What happens if MyDocs gets unmounted because of USB access?
* (Done) Cursor should not change position if user touches to flick. Only if tap without movement happend or long tap.

== First public release ==
* Preedit (word suggestions) should be displayed in the target format
* Everything (esp. lists) need to work correctly if selections over multiple lines exist
* Pressing 'Delete' at the end of a list item needs to join it with the next line
* Don't apply styling to bullets if they are selected before selecting a text style

== Later ==
* Get theming (BorderImage) of ListDelegate right.
* First letter after a bullet should be capitalized
* Try using QGraphicsTextItem instead of QTextEdit. Maybe the performance is better because we don't need the proxy item.
* Make sure note titles are unique
* Use Booster to decrease startup time http://harmattan-dev.nokia.com/unstable/beta/api_refs/xml/daily-docs/applauncherd/qmlboost.html (>> See 2. Utilizing the booster cache)
* Unknown tags need to be added to the QTextDocument. Otherwise we can't write them back later and might loose information that is important for some Tomboy plug-in. Try to Use custom properties in QTextFormat.
* Sometimes no input possible. Then no virtual keyboard pops up on real device
* Implement note sharing. Started, but not trivial. Only files indexed by tracker can be shared.
* Stop cursor from blinking
* Use Harmattan list widget (allows jumping via first letter of entry). No ready made QML component. Only MTF.
* Integrate into system backup
* Add 'link' button to top bar
* Alow theme switching. Colors + inverted/normal
* Add settings
* Add automatic linking of notes while typing
* Add automatic linkning to URLs, etc.
* Add automatic linking of Contacts etc. (via Tracker, if possible)
* Add folders/notebooks. Should integrate into the main note list
* Implement sync against Ubuntu One and Snowy using OAuth, JSON, etc.


